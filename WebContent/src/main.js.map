{"version":3,"sources":["main.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","minLen","_arrayLikeToArray","toString","call","slice","name","from","test","arr","len","arr2","_classCallCheck","instance","_inherits","subClass","superClass","create","_setPrototypeOf","p","setPrototypeOf","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","result","Super","_getPrototypeOf","NewTarget","this","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Date","getPrototypeOf","game","ctb","App","_Phaser$Game","Phaser","Game","_super","_this","config","type","AUTO","width","CANVAS_WIDTH","height","CANVAS_HEIGHT","parent","dom","createContainer","scale","mode","FitScaleManager","detectBestScaleMode","autoCenter","Scale","CENTER_BOTH","transparent","scene","add","Boot","window","onload","delayedCalls","delayedCall","delay","callback","args","callbackScope","getAt","dc","time","push","t","setTimeout","pauseAllDelayedCalls","_step","_iterator","Time","TimerEvent","paused","resumeAllDelayedCalls","_step2","_iterator2","destroyAllDelayedCalls","_step3","_iterator3","remove","clearTimeout","destroyDelayedCall","ind","indexOf","splice","setPageBackground","bg","document","querySelector","style","backgroundImage","setupButton","btn","frame","on","setFrame","sound","play","setupButtonTextureBased","texture","hoverTexture","setTexture","playBtnClickAnim","sc","hasOwnProperty","scaleX","scaleY","tweens","targets","duration","yoyo","_this2","doResize","calculateScale","newCanvasWidth","phaserScaleManager","newCanvasHeight","canvasStyle","marginLeft","innerWidth","marginTop","innerHeight","canvas","addListener","Events","RESIZE","onResize","overridePhaserTransformMethods","scaleMode","NONE","Math","min","_this3","transformX","pageX","parseInt","split","transformY","pageY","RESIZE_DELAY","iOS","navigator","platform","isAndroid","userAgent","toLowerCase","FIT","core","Gameplay","currentRound","correctAnswersCount","wrongAnswersCount","correctAnswersCountThisRound","wrongAnswersCountThisRound","onNewRound","nextLetterDelay","failsNumToLose","Number","cache","json","get","useImages","Boolean","onComplete","onLose","totalRoundsNum","score","calculateScore","nextLetter","_this4","fn","currentWordData","Utils","RemoveRandomElement","words","onLetterChosen","getCurrentTotalAnswersCountThisRound","setupCallbacks","allWorlds","_Phaser$Scene","Scene","_super2","_this5","offsetLeft","parentElement","displayScale","x","offsetTop","y","Preloader","MainScene","_Phaser$Scene2","_super3","gameplay","gameplayScreen","screen","GameplayScreen","children","showInstructionPage","_Phaser$Scene3","_super4","load","_this6","_step4","_iterator4","w","image","_step5","_iterator5","audio","progressTxt","text","fontFamily","fontSize","color","align","setOrigin","pack","ceil","nextScene","start","animKey","sprite","undefined","mainScene","getScene","anims","exists","data","ANIMS_DATA","frames","generateFrameNames","end","zeroPad","prefix","suffix","frameRate","repeat","currentAnim","off","stop","once","bubble_poping","padNum","atlas","bubble_idle","turtle_idle","turtle_shock","AreYouSureWindow","_Phaser$GameObjects$C","GameObjects","Container","_super5","onYes","onNo","_this7","_areYouSurePage","Image","setInteractive","_btnSureYes","cursor","_btnSureNo","CompleteWindow","_Phaser$GameObjects$C2","_super6","onBack","onReplay","onNext","_this8","music","setPosition","_bgComplete","_cup","_btnBack","_btnReplay","_btnNext","_CollectedPoints","totalScoreTxt","stroke","strokeThickness","grd","context","createLinearGradient","addColorStop","setFill","starScoreTxt","starScore","ease","Easing","Back","Out","String","_Phaser$GameObjects$C3","_super7","_this9","bgMusic","correctAudio","idleDelayedCall","playIdle","playAnim","character","floor","random","sfxBubblePopCounter","wfsnd","showCompleteWindow","completeWindow","destroyGameplay","setInputEnabled","show","showLoseWindow","timerEvent","destroy","tryAgainWindow","TryAgainWindow","_gameStage","setScale","_btnClose","onCloseClick","_btnSound","onSoundClick","areYouSureWindow","parentContainer","pause","playCorrectAudio","_this10","loop","gameplayContainer","addAt","getIndex","reset","createRounds","prepareRound","_this11","removeAll","randomized","positions","txt","fixedHeight","setText","_step6","_iterator6","_loop","word","setSize","onCorrectAnswer","showPopBubble","tfCorrectAnswerCount","lost","onWrongAnswer","shakeBubble","tfWrongAnswerCount","pixelPerfect","tfTimer","renderTimer","addEvent","repeatCount","seconds","sec","round","bubble","_this12","showOut","getCurrentTotalAnswersCount","completed","showAreYouSurePage","_this13","playInstructionSound","instructionPage","InstructionPage","showGameplay","_this14","pauseAll","pauseSounds","resumeAll","unpauseSounds","enabled","_step7","_iterator7","_step8","_iterator8","disableInteractive","stopAll","_Phaser$GameObjects$C4","_super8","onPlayClick","onSndClick","_this15","_instructionPage","_instructionPageTitle","_btnPlay","instrTxt","setWordWrapWidth","setLineSpacing","_btnSoundInstruction","_Phaser$GameObjects$C5","_super9","_this16","_bg","_star"],"mappings":"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","file":"main.js","sourcesContent":["var ctb;\n(function (ctb) {\n    class App extends Phaser.Game {\n        constructor() {\n            let config = {\n                type: Phaser.AUTO,\n                width: App.CANVAS_WIDTH,\n                height: App.CANVAS_HEIGHT,\n                parent: 'game-container',\n                dom: {\n                    createContainer: false\n                },\n                scale: {\n                    mode: FitScaleManager.detectBestScaleMode(),\n                    autoCenter: Phaser.Scale.CENTER_BOTH\n                },\n                transparent: true,\n                scene: {\n                    create: () => {\n                        this.scene.add('Boot', ctb.scene.Boot, true);\n                    }\n                }\n            };\n            super(config);\n        }\n    }\n    App.CANVAS_WIDTH = 980;\n    App.CANVAS_HEIGHT = 600;\n    ctb.App = App;\n})(ctb || (ctb = {}));\nlet game;\nwindow.onload = () => {\n    game = new ctb.App();\n};\nlet delayedCalls = [];\nfunction delayedCall(delay, callback, args, callbackScope) {\n    let scene = game.scene.getAt(0);\n    if (scene) {\n        let dc = scene.time.delayedCall(delay, callback, args, callbackScope);\n        delayedCalls.push(dc);\n        return dc;\n    }\n    let t = setTimeout(callback, delay);\n    delayedCalls.push(t);\n    return t;\n}\nfunction pauseAllDelayedCalls() {\n    for (let dc of delayedCalls) {\n        if (dc instanceof Phaser.Time.TimerEvent) {\n            dc.paused = true;\n        }\n    }\n}\nfunction resumeAllDelayedCalls() {\n    for (let dc of delayedCalls) {\n        if (dc instanceof Phaser.Time.TimerEvent) {\n            dc.paused = false;\n        }\n    }\n}\nfunction destroyAllDelayedCalls() {\n    for (let dc of delayedCalls) {\n        if (dc instanceof Phaser.Time.TimerEvent) {\n            dc.remove(false);\n        }\n        else {\n            clearTimeout(dc);\n        }\n    }\n    delayedCalls = [];\n}\nfunction destroyDelayedCall(dc) {\n    if (dc instanceof Phaser.Time.TimerEvent) {\n        dc.remove(false);\n    }\n    else {\n        clearTimeout(dc);\n    }\n    let ind = delayedCalls.indexOf(dc);\n    if (ind >= 0)\n        delayedCalls.splice(ind, 1);\n}\nfunction setPageBackground(bg) {\n    document.querySelector(\"html\").style.backgroundImage = \"url(assets/imgs/\" + bg + \".jpg)\";\n}\nfunction setupButton(btn, frame) {\n    btn.on('pointerdown', () => { btn.setFrame(frame + '_hover' + '0000'); });\n    btn.on('pointerover', () => { btn.setFrame(frame + '_hover' + '0000'); game.scene.getAt(0).sound.add(\"button hover\").play(); });\n    btn.on('pointerout', () => { btn.setFrame(frame + '0000'); });\n    btn.on('pointerup', () => { btn.setFrame(frame + '0000'); game.scene.getAt(0).sound.add('activity selection - button selection').play(); });\n}\nfunction setupButtonTextureBased(btn, texture, hoverTexture) {\n    btn.on('pointerdown', () => { btn.setTexture(hoverTexture); });\n    btn.on('pointerover', () => { btn.setTexture(hoverTexture); game.scene.getAt(0).sound.add(\"button hover\").play(); });\n    btn.on('pointerout', () => { btn.setTexture(texture); });\n    btn.on('pointerup', () => { btn.setTexture(texture); game.scene.getAt(0).sound.add('activity selection - button selection').play(); });\n}\nfunction playBtnClickAnim(target) {\n    let sc = target.hasOwnProperty(\"defScale\") ? target[\"defScale\"] : 1;\n    target.scaleX = target.scaleY = sc;\n    let scene = game.scene.getAt(0);\n    scene.tweens.add({\n        targets: target,\n        \"scaleX\": 0.9 * sc,\n        \"scaleY\": 0.9 * sc,\n        duration: 100,\n        yoyo: true\n    });\n}\n/**\n * @author Roman Parada\n * This class is created to fix overlapping of bottom part of canvas by navigation bar in iOS.\n * It make a delayed resize of the canvas (like Phaser-3 FIT methods does) and it overrides Phaser-3 input window to Phaser-3 core transform methods\n *\n * How to use:\n * Just call the code line below in Boot scene's init() method of your project:\n * new FitScaleManager(this.game).setup();\n */\nclass FitScaleManager {\n    constructor(game) {\n        this.doResize = () => {\n            let scale = this.calculateScale();\n            let newCanvasWidth = this.phaserScaleManager.width * scale;\n            let newCanvasHeight = this.phaserScaleManager.height * scale;\n            this.canvasStyle.width = newCanvasWidth + 'px';\n            this.canvasStyle.height = newCanvasHeight + 'px';\n            this.canvasStyle.marginLeft = (window.innerWidth - newCanvasWidth) / 2 + 'px';\n            this.canvasStyle.marginTop = (window.innerHeight - newCanvasHeight) / 2 + 'px';\n        };\n        this.game = game;\n        this.canvasStyle = this.game.canvas.style;\n        this.phaserScaleManager = this.game.scale;\n    }\n    static detectBestScaleMode() {\n        let iOS = /iPad|iPhone|iPod/.test(navigator.platform || \"\");\n        let isAndroid = window.navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\n        return iOS || isAndroid ? Phaser.Scale.FIT : Phaser.Scale.NONE;\n    }\n    ;\n    /**\n     * Just call this method once in Boot scene's init() method\n     */\n    setup() {\n        this.phaserScaleManager.addListener(Phaser.Scale.Events.RESIZE, this.onResize, this);\n        this.overridePhaserTransformMethods();\n        this.onResize();\n    }\n    calculateScale() {\n        if (game.scale.scaleMode == Phaser.Scale.NONE)\n            return 1;\n        return Math.min(window.innerWidth / this.phaserScaleManager.width, window.innerHeight / this.phaserScaleManager.height);\n    }\n    overridePhaserTransformMethods() {\n        this.game.scale.transformX = (pageX) => {\n            return (pageX - parseInt(this.canvasStyle.marginLeft.split(\"px\")[0])) / this.calculateScale();\n        };\n        this.game.scale.transformY = (pageY) => {\n            return (pageY - parseInt(this.canvasStyle.marginTop.split(\"px\")[0])) / this.calculateScale();\n        };\n    }\n    onResize() {\n        setTimeout(this.doResize, FitScaleManager.RESIZE_DELAY);\n    }\n}\nFitScaleManager.RESIZE_DELAY = 500;\nvar ctb;\n(function (ctb) {\n    var core;\n    (function (core) {\n        class Gameplay {\n            constructor() {\n                this.currentRound = 0;\n                this.correctAnswersCount = 0;\n                this.wrongAnswersCount = 0;\n                this.correctAnswersCountThisRound = 0;\n                this.wrongAnswersCountThisRound = 0;\n                this.onNewRound = null;\n                this.nextLetterDelay = 0;\n                this.failsNumToLose = Number(game.cache.json.get('gameplay')[\"failsNumToLose\"]);\n                this.useImages = Boolean(game.cache.json.get('gameplay')[\"useImages\"]);\n            }\n            setupCallbacks(onComplete, onLose, onNewRound) {\n                this.onComplete = onComplete;\n                this.onLose = onLose;\n                this.onNewRound = onNewRound;\n            }\n            calculateScore() {\n                return this.totalRoundsNum - this.wrongAnswersCount;\n            }\n            onLetterChosen() {\n                if (this.correctAnswersCountThisRound == 1) {\n                    this.currentRound++;\n                    if (this.currentRound >= this.totalRoundsNum) {\n                        let score = this.calculateScore();\n                        this.onComplete(score, score);\n                        return true;\n                    }\n                    else {\n                        this.nextLetter();\n                    }\n                }\n                return false;\n            }\n            nextLetter() {\n                let fn = () => {\n                    this.currentWordData = Phaser.Utils.Array.RemoveRandomElement(this.words);\n                    this.correctAnswersCountThisRound = 0;\n                    this.wrongAnswersCountThisRound = 0;\n                    if (this.onNewRound)\n                        this.onNewRound();\n                };\n                if (this.nextLetterDelay == 0) {\n                    fn();\n                }\n                else {\n                    delayedCall(this.nextLetterDelay, fn);\n                }\n            }\n            onCorrectAnswer() {\n                this.correctAnswersCount++;\n                this.correctAnswersCountThisRound++;\n                this.nextLetterDelay = 1500;\n                return this.onLetterChosen();\n            }\n            onWrongAnswer() {\n                this.wrongAnswersCount++;\n                this.wrongAnswersCountThisRound++;\n                this.nextLetterDelay = 0;\n                if (this.wrongAnswersCount >= this.failsNumToLose) {\n                    this.onLose(0, 0);\n                    return true;\n                }\n                else {\n                    this.onLetterChosen();\n                }\n                return false;\n            }\n            getCurrentTotalAnswersCount() {\n                return this.correctAnswersCount + this.wrongAnswersCount;\n            }\n            getCurrentTotalAnswersCountThisRound() {\n                return this.correctAnswersCountThisRound + this.wrongAnswersCountThisRound;\n            }\n            isNewRound() {\n                return this.getCurrentTotalAnswersCountThisRound() == 0;\n            }\n            isRoundsComplete() {\n                return this.currentRound >= this.totalRoundsNum;\n            }\n            reset() {\n                this.nextLetterDelay = 0;\n                this.setupCallbacks(null, null, null);\n                let json = game.cache.json.get('gameplay');\n                this.words = json[\"words\"].slice();\n                this.allWorlds = json[\"words\"].slice();\n                this.totalRoundsNum = this.words.length;\n                this.nextLetter();\n                this.currentRound = 0;\n                this.correctAnswersCount = 0;\n                this.wrongAnswersCount = 0;\n                this.correctAnswersCountThisRound = 0;\n                this.wrongAnswersCountThisRound = 0;\n            }\n        }\n        core.Gameplay = Gameplay;\n    })(core = ctb.core || (ctb.core = {}));\n})(ctb || (ctb = {}));\nvar ctb;\n(function (ctb) {\n    var scene;\n    (function (scene) {\n        class Boot extends Phaser.Scene {\n            init() {\n                this.game.scale.transformX = (pageX) => {\n                    let offsetLeft = 0;\n                    let parentElement = game.canvas.parentElement;\n                    while (parentElement) {\n                        if (parentElement.offsetLeft) {\n                            offsetLeft = parentElement.offsetLeft;\n                            break;\n                        }\n                        parentElement = parentElement.parentElement;\n                    }\n                    return (pageX - offsetLeft) * this.game.scale.displayScale.x;\n                };\n                this.game.scale.transformY = (pageY) => {\n                    let offsetTop = 0;\n                    let parentElement = game.canvas.parentElement;\n                    while (parentElement) {\n                        if (parentElement.offsetTop) {\n                            offsetTop = parentElement.offsetTop;\n                            break;\n                        }\n                        parentElement = parentElement.parentElement;\n                    }\n                    return (pageY - offsetTop) * this.game.scale.displayScale.y;\n                };\n            }\n            create() {\n                game.scene.remove('Boot');\n                game.scene.add('Preloader', ctb.scene.Preloader, true);\n            }\n        }\n        scene.Boot = Boot;\n    })(scene = ctb.scene || (ctb.scene = {}));\n})(ctb || (ctb = {}));\nvar ctb;\n(function (ctb) {\n    var scene;\n    (function (scene) {\n        var Gameplay = ctb.core.Gameplay;\n        class MainScene extends Phaser.Scene {\n            create() {\n                this.gameplay = new Gameplay();\n                this.gameplayScreen = new ctb.screen.GameplayScreen(this, this.gameplay);\n                this.children.add(this.gameplayScreen);\n                this.gameplayScreen.showInstructionPage();\n            }\n        }\n        scene.MainScene = MainScene;\n    })(scene = ctb.scene || (ctb.scene = {}));\n})(ctb || (ctb = {}));\nvar ctb;\n(function (ctb) {\n    var scene;\n    (function (scene) {\n        class Preloader extends Phaser.Scene {\n            preload() {\n                this.load.json('gameplay', 'assets/json/gameplay.json');\n            }\n            create() {\n                let json = game.cache.json.get('gameplay');\n                if (json[\"useImages\"]) {\n                    for (let w of json[\"words\"]) {\n                        this.load.image(w[\"letterName\"], \"assets/imgs/words/\" + w[\"imageKey\"] + \".png\");\n                    }\n                }\n                for (let w of json[\"words\"]) {\n                    this.load.audio(w[\"audioKey\"], \"assets/sound/mp3/words/\" + w[\"audioKey\"] + \".mp3\");\n                }\n                let progressTxt = this.add.text(game.scale.width / 2, game.scale.height / 2, \"\", {\n                    \"fontFamily\": \"Quran Era font\",\n                    \"fontSize\": 25,\n                    \"color\": \"#000000\",\n                    \"align\": 'center'\n                });\n                progressTxt.setOrigin(0.5, 0.5);\n                this.load.pack('preloader', 'assets/pack.json');\n                this.load.on('progress', (value) => {\n                    progressTxt.text = Math.ceil(value * 100) + \"%\";\n                }, this);\n                this.load.on('complete', () => {\n                    this.nextScene();\n                });\n                this.load.start();\n            }\n            static playAnim(animKey, sprite, onComplete = null) {\n                let mainScene = game.scene.getScene('ScreenMain');\n                if (!mainScene.anims.exists(animKey)) {\n                    let data = Preloader.ANIMS_DATA[animKey];\n                    mainScene.anims.create({\n                        key: animKey,\n                        frames: mainScene.anims.generateFrameNames(data['atlas'], {\n                            start: data['start'], end: data['end'], zeroPad: data['padNum'],\n                            prefix: data['prefix'], suffix: ''\n                        }),\n                        frameRate: data['frameRate'],\n                        repeat: data['repeat']\n                    });\n                }\n                if (sprite.anims.currentAnim) {\n                    sprite.anims.currentAnim.off('complete');\n                }\n                sprite.anims.stop();\n                sprite.play(animKey);\n                sprite.anims.currentAnim.once('complete', () => {\n                    if (onComplete)\n                        onComplete();\n                });\n                return sprite;\n            }\n            nextScene() {\n                game.scene.remove('Preloader');\n                game.scene.add('ScreenMain', ctb.scene.MainScene, true);\n            }\n        }\n        Preloader.ANIMS_DATA = {\n            'bubble_poping': {\n                'start': 0,\n                'end': 26,\n                'padNum': 4,\n                'prefix': 'bubble_poping',\n                'repeat': 0,\n                'frameRate': 24,\n                'atlas': 'bubble-atlas'\n            },\n            'bubble_idle': {\n                'start': 0,\n                'end': 50,\n                'padNum': 4,\n                'prefix': 'idle',\n                'repeat': -1,\n                'frameRate': 24,\n                'atlas': 'bubble-atlas'\n            },\n            'turtle_idle': {\n                'start': 0,\n                'end': 35,\n                'padNum': 4,\n                'prefix': 'turtle_idle',\n                'repeat': 0,\n                'frameRate': 24,\n                'atlas': 'turtle-idle-atlas'\n            },\n            'turtle_shock': {\n                'start': 0,\n                'end': 32,\n                'padNum': 4,\n                'prefix': 'turtle_shock',\n                'repeat': 0,\n                'frameRate': 24,\n                'atlas': 'turtle_shock-atlas'\n            },\n        };\n        scene.Preloader = Preloader;\n    })(scene = ctb.scene || (ctb.scene = {}));\n})(ctb || (ctb = {}));\nvar ctb;\n(function (ctb) {\n    var screen;\n    (function (screen) {\n        class AreYouSureWindow extends Phaser.GameObjects.Container {\n            constructor(scene, onYes, onNo) {\n                super(scene);\n                this._areYouSurePage = new Phaser.GameObjects.Image(this.scene, -105, 0 - 48, 'Exit warning');\n                this._areYouSurePage.setOrigin(0, 0);\n                this._areYouSurePage.setInteractive();\n                this._btnSureYes = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2 - 95, 485 - 50, 'btnYES1');\n                this._btnSureYes.setInteractive({ cursor: 'pointer' });\n                this._btnSureYes.once('pointerup', onYes);\n                setupButtonTextureBased(this._btnSureYes, 'btnYES1', 'btnYES2');\n                this._btnSureNo = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2 + 95, 485 - 50, 'btnNO1');\n                this._btnSureNo.setInteractive({ cursor: 'pointer' });\n                this._btnSureNo.once('pointerup', onNo);\n                setupButtonTextureBased(this._btnSureNo, 'btnNO1', 'btnNO2');\n                this.add(this._areYouSurePage);\n                this.add(this._btnSureYes);\n                this.add(this._btnSureNo);\n            }\n        }\n        screen.AreYouSureWindow = AreYouSureWindow;\n    })(screen = ctb.screen || (ctb.screen = {}));\n})(ctb || (ctb = {}));\nvar ctb;\n(function (ctb) {\n    var screen;\n    (function (screen) {\n        class CompleteWindow extends Phaser.GameObjects.Container {\n            constructor(scene, onBack, onReplay, onNext) {\n                super(scene);\n                this.music = null;\n                this.setPosition(-104.5, -48);\n                this._bgComplete = new Phaser.GameObjects.Image(this.scene, 0, 0, 'Completion page LATEST UPDATED');\n                this._bgComplete.setOrigin(0, 0);\n                this._bgComplete.setInteractive();\n                this._cup = new Phaser.GameObjects.Image(this.scene, 400, 410, 'Trophy');\n                this._btnBack = new Phaser.GameObjects.Image(this.scene, 570, 570, 'btnBACK1');\n                this._btnReplay = new Phaser.GameObjects.Image(this.scene, 720, 570, 'btnReplay1');\n                this._btnNext = new Phaser.GameObjects.Image(this.scene, 870, 570, 'btnNEXT1');\n                let _CollectedPoints = new Phaser.GameObjects.Image(this.scene, 620, 440, 'Collected Points');\n                this.totalScoreTxt = this.scene.add.text(845, 352, \"\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 35,\n                    \"color\": \"#F49F1C\",\n                    \"align\": 'center',\n                    'stroke': '#70451A',\n                    'strokeThickness': 6\n                });\n                this.totalScoreTxt.setOrigin(0.5, 0.5);\n                let grd = this.totalScoreTxt.context.createLinearGradient(0, 0, 0, this.totalScoreTxt.height);\n                grd.addColorStop(0, '#FFFF00');\n                grd.addColorStop(1, '#C17316');\n                this.totalScoreTxt.setFill(grd);\n                this.starScoreTxt = this.scene.add.text(648, 433, \"\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 24,\n                    \"color\": \"#FFFFFF\",\n                    \"align\": 'center'\n                });\n                this.starScoreTxt.setOrigin(0.5, 0.5);\n                this.add([\n                    this._bgComplete,\n                    _CollectedPoints,\n                    this._cup,\n                    this._btnBack,\n                    this._btnReplay,\n                    this._btnNext,\n                    this.totalScoreTxt,\n                    this.starScoreTxt\n                ]);\n                this._btnBack.setInteractive({ cursor: 'pointer' });\n                this._btnBack.on('pointerup', () => {\n                    onBack(this._btnBack);\n                    // if (this.music) {\n                    //     this.music.stop();\n                    // }\n                });\n                setupButtonTextureBased(this._btnBack, 'btnBACK1', 'btnBACK2');\n                this._btnReplay.setInteractive({ cursor: 'pointer' });\n                this._btnReplay.once('pointerup', () => {\n                    onReplay(this._btnReplay);\n                    if (this.music) {\n                        this.music.stop();\n                    }\n                });\n                setupButtonTextureBased(this._btnReplay, 'btnReplay1', 'btnReplay2');\n                this._btnNext.setInteractive({ cursor: 'pointer' });\n                this._btnNext.on('pointerup', () => {\n                    onNext(this._btnNext);\n                    // if (this.music) {\n                    //     this.music.stop();\n                    // }\n                });\n                setupButtonTextureBased(this._btnNext, 'btnNEXT1', 'btnNEXT2');\n            }\n            show(score, starScore) {\n                this._cup.scale = 1.25;\n                this.scene.tweens.add({\n                    targets: this._cup,\n                    \"scale\": 1,\n                    duration: 500,\n                    ease: Phaser.Math.Easing.Back.Out\n                });\n                this.totalScoreTxt.text = String(score);\n                this.starScoreTxt.text = String(starScore);\n                // let music = this.scene.sound.add(\"viktory\");\n                this.music = this.scene.sound.add(\"Activity completion fantastic\");\n                this.music.play();\n            }\n        }\n        screen.CompleteWindow = CompleteWindow;\n    })(screen = ctb.screen || (ctb.screen = {}));\n})(ctb || (ctb = {}));\nvar ctb;\n(function (ctb) {\n    var screen;\n    (function (screen) {\n        var Preloader = ctb.scene.Preloader;\n        class GameplayScreen extends Phaser.GameObjects.Container {\n            constructor(scene, gameplay) {\n                super(scene);\n                this.bgMusic = null;\n                this.correctAudio = null;\n                this.idleDelayedCall = null;\n                this.playIdle = () => {\n                    Preloader.playAnim('turtle_idle', this.character, () => {\n                        this.idleDelayedCall = delayedCall(Math.floor(Math.random() * 5) * 500, this.playIdle);\n                    });\n                };\n                this.sfxBubblePopCounter = 0;\n                this.wfsnd = null;\n                this.showCompleteWindow = (score, starScore) => {\n                    let completeWindow = new screen.CompleteWindow(this.scene, (target) => {\n                        playBtnClickAnim(target);\n                    }, (target) => {\n                        playBtnClickAnim(target);\n                        this.destroyGameplay();\n                        this.remove(completeWindow);\n                        this.showInstructionPage();\n                    }, (target) => {\n                        playBtnClickAnim(target);\n                    });\n                    this.setInputEnabled(false);\n                    delayedCall(2000, () => {\n                        setPageBackground(\"bg-blue\");\n                        this.add(completeWindow);\n                        completeWindow.show(score, starScore);\n                        this.bgMusic.stop();\n                    });\n                };\n                this.showLoseWindow = (score, starScore) => {\n                    this.timerEvent.destroy();\n                    let tryAgainWindow = new screen.TryAgainWindow(this.scene, (target) => {\n                        playBtnClickAnim(target);\n                    }, (target) => {\n                        playBtnClickAnim(target);\n                        this.destroyGameplay();\n                        this.remove(tryAgainWindow);\n                        this.showInstructionPage();\n                    });\n                    this.setInputEnabled(false);\n                    delayedCall(1500, () => {\n                        setPageBackground(\"bg-blue\");\n                        this.add(tryAgainWindow);\n                        tryAgainWindow.show(score, starScore);\n                        this.bgMusic.stop();\n                    });\n                };\n                this.gameplay = gameplay;\n                window[\"gs\"] = this;\n                this._gameStage = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2, game.scale.height / 2, 'BG');\n                this._gameStage.setOrigin(0.5, 0.5);\n                this._gameStage.setScale(1.02);\n                this._gameStage.setInteractive();\n                this.add(this._gameStage);\n                this._btnClose = new Phaser.GameObjects.Image(this.scene, 1025 - 105, 100 - 50, 'x Button');\n                this._btnClose.setInteractive({ cursor: 'pointer' });\n                this._btnClose[\"defScale\"] = this._btnClose.scale;\n                setupButtonTextureBased(this._btnClose, 'x Button', 'x Button HOVER EFFECT');\n                this.add(this._btnClose);\n                this._btnClose.on('pointerup', () => {\n                    playBtnClickAnim(this._btnClose);\n                    this.onCloseClick();\n                });\n                this._btnSound = new Phaser.GameObjects.Image(this.scene, 160 - 105, 100 - 50, 'Sound');\n                this._btnSound.setInteractive({ cursor: 'pointer' });\n                this._btnSound[\"defScale\"] = this._btnSound.scale;\n                setupButtonTextureBased(this._btnSound, 'Sound', 'Sound HOVER EFFECT');\n                this.add(this._btnSound);\n                this._btnSound.on('pointerup', () => {\n                    playBtnClickAnim(this._btnSound);\n                    this.onSoundClick();\n                });\n            }\n            playCorrectAudio() {\n                if (this.correctAudio) {\n                    this.correctAudio.stop();\n                }\n                this.correctAudio = this.scene.sound.add(this.gameplay.currentWordData[\"word\"]);\n                this.correctAudio.play();\n                if (this.areYouSureWindow && this.areYouSureWindow.parentContainer == this) {\n                    this.correctAudio.pause();\n                }\n            }\n            onSoundClick() {\n                this.playCorrectAudio();\n            }\n            showGameplay() {\n                setPageBackground(\"bg-australia\");\n                this.bgMusic = this.scene.sound.add(\"Bachground ambience\");\n                this.bgMusic.play();\n                this.bgMusic.loop = true;\n                this.gameplayContainer = new Phaser.GameObjects.Container(this.scene);\n                this.addAt(this.gameplayContainer, this.getIndex(this._btnClose));\n                this.gameplay.reset();\n                this.createRounds();\n                this.prepareRound();\n                this.gameplay.setupCallbacks(this.showCompleteWindow, this.showLoseWindow, () => {\n                    this.onNewRound(true);\n                });\n            }\n            createRounds() {\n                this.gameplayContainer.removeAll();\n                this.character = this.scene.add.sprite(205, 435, null);\n                this.playIdle();\n                this.gameplayContainer.add(this.character);\n                let randomized = this.gameplay.allWorlds.slice(); //Phaser.Utils.Array.Shuffle(this.gameplay.allWorlds.slice());\n                this.words = [];\n                let positions = [\n                    { x: 68, y: 174 }, { x: 235, y: 72 }, { x: 461, y: 98 }, { x: 367, y: 253 }, { x: 674, y: 52 }, { x: 605, y: 226 }, { x: 429, y: 416 }, { x: 654, y: 390 }\n                ];\n                for (let i = 0; i < randomized.length; i++) {\n                    let w = new Phaser.GameObjects.Container(this.scene, positions[i]['x'] + 20 + 83, positions[i]['y'] + 23 + 65);\n                    w.add(w[\"-image-\"] = this.scene.add.sprite(0, 0, null));\n                    w[\"-image-\"].setOrigin(0.5, 0.5);\n                    this.words.push(w);\n                    let txt;\n                    if (this.gameplay.useImages) {\n                        txt = new Phaser.GameObjects.Image(this.scene, 0, 0, randomized[i][\"imageKey\"]);\n                        w.add(txt);\n                    }\n                    else {\n                        txt = this.scene.add.text(0, -5, \"\", {\n                            \"fontFamily\": \"Quran Era font\",\n                            \"fontSize\": 55,\n                            \"color\": \"#000000\",\n                            \"align\": 'center'\n                        });\n                        txt.setOrigin(0.5, 0.5);\n                        txt.style.fixedHeight = 75;\n                        txt.setText(randomized[i][\"word\"]);\n                        w.add(txt);\n                    }\n                    w[\"-letter-\"] = txt;\n                    w[\"-word-text-\"] = randomized[i][\"word\"];\n                    this.gameplayContainer.add(w);\n                    Preloader.playAnim('bubble_idle', w[\"-image-\"]);\n                }\n                for (let word of this.words) {\n                    word.setSize(word[\"-image-\"].width, word[\"-image-\"].height);\n                    word.setInteractive({ cursor: 'pointer' });\n                    word.on('pointerdown', () => {\n                        this.setInputEnabled(false);\n                        if (word[\"-word-text-\"] == this.gameplay.currentWordData[\"word\"]) {\n                            this.onCorrectAnswer();\n                            word.parentContainer.remove(word);\n                            this.showPopBubble(word);\n                            // this.fadeBubblesOut();\n                            this.tfCorrectAnswerCount.setText(String(this.gameplay.correctAnswersCount));\n                        }\n                        else {\n                            let lost = this.onWrongAnswer();\n                            this.shakeBubble(word);\n                            Preloader.playAnim('turtle_shock', this.character, this.playIdle);\n                            delayedCall(200, () => this.scene.sound.add(\"Turtle animation sfx\").play());\n                            delayedCall(550, () => {\n                                if (!lost) {\n                                    this.setInputEnabled(true);\n                                }\n                            });\n                            this.tfWrongAnswerCount.setText(String(this.gameplay.wrongAnswersCount));\n                        }\n                    });\n                }\n                this._btnClose.setInteractive({ cursor: 'pointer', pixelPerfect: true });\n                this.setInputEnabled(false);\n                this.tfCorrectAnswerCount = this.scene.add.text(game.scale.width / 2 - 118, 29, \"0\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 20,\n                    \"color\": \"#FFFFFF\",\n                    \"align\": 'center'\n                });\n                this.gameplayContainer.add(this.tfCorrectAnswerCount);\n                this.tfWrongAnswerCount = this.scene.add.text(game.scale.width / 2 - 26, 29, \"0\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 20,\n                    \"color\": \"#FFFFFF\",\n                    \"align\": 'center'\n                });\n                this.gameplayContainer.add(this.tfWrongAnswerCount);\n                this.tfTimer = this.scene.add.text(game.scale.width / 2 + 73, 29, \"00:00\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 20,\n                    \"color\": \"#FFFFFF\",\n                    \"align\": 'center'\n                });\n                this.gameplayContainer.add(this.tfTimer);\n                let seconds = 120;\n                this.renderTimer(seconds);\n                this.timerEvent = this.scene.time.addEvent({ delay: 1000, repeat: seconds });\n                this.timerEvent.callback = () => {\n                    if (this.timerEvent.repeatCount == 0) {\n                        this.showLoseWindow(0, 0);\n                    }\n                    this.renderTimer(this.timerEvent.repeatCount);\n                };\n            }\n            renderTimer(seconds) {\n                let sec = seconds % 60;\n                let min = Math.round((seconds - sec) / 60);\n                this.tfTimer.setText((min < 10 ? '0' + min : min)\n                    + \":\" +\n                    (sec < 10 ? '0' + sec : sec));\n            }\n            showPopBubble(bubble) {\n                let bubble_poping = this.scene.add.sprite(bubble.x, bubble.y, null);\n                this.gameplayContainer.add(bubble_poping);\n                Preloader.playAnim('bubble_poping', bubble_poping, () => {\n                    if (bubble_poping.parentContainer)\n                        bubble_poping.parentContainer.remove(bubble_poping);\n                });\n            }\n            shakeBubble(bubble) {\n                this.scene.tweens.add({\n                    targets: bubble,\n                    x: bubble.x - 5,\n                    duration: 100,\n                    yoyo: true,\n                    repeat: 5\n                });\n                this.scene.tweens.add({\n                    targets: bubble,\n                    y: bubble.y + 5,\n                    duration: 70,\n                    yoyo: true,\n                    repeat: 5\n                });\n            }\n            addIdleAnim(bubble) {\n                this.scene.tweens.add({\n                    targets: bubble,\n                    \"scaleX\": 0.95,\n                    duration: 1000,\n                    yoyo: true,\n                    repeat: -1\n                });\n                this.scene.tweens.add({\n                    targets: bubble,\n                    \"scaleY\": 0.97,\n                    duration: 800,\n                    yoyo: true,\n                    repeat: -1\n                });\n            }\n            prepareRound() {\n                delayedCall(750, () => {\n                    this.playCorrectAudio();\n                    delayedCall(750, () => { this.setInputEnabled(true); });\n                });\n            }\n            onNewRound(showOut) {\n                this.scene.sound.add(\"next_round\").play();\n                this.setInputEnabled(false);\n                if (showOut) {\n                    this.prepareRound();\n                }\n            }\n            onCorrectAnswer() {\n                let i = this.gameplay.getCurrentTotalAnswersCount();\n                let completed = this.gameplay.onCorrectAnswer();\n                this.scene.sound.add(this.sfxBubblePopCounter++ % 2 == 0 ? 'Bubble Pop 1' : 'Bubble Pop 2').play();\n                return completed;\n            }\n            onWrongAnswer() {\n                let i = this.gameplay.getCurrentTotalAnswersCount();\n                let lost = this.gameplay.onWrongAnswer();\n                this.scene.sound.add(\"Wrong click\").play();\n                if (this.idleDelayedCall != null) {\n                    destroyDelayedCall(this.idleDelayedCall);\n                    this.idleDelayedCall = null;\n                }\n                return lost;\n            }\n            onCloseClick() {\n                this.showAreYouSurePage();\n                this.scene.sound.add('warning page pop up sfx').play();\n            }\n            showInstructionPage() {\n                setPageBackground(\"bg-blue\");\n                let playInstructionSound = () => {\n                    if (this.wfsnd) {\n                        this.wfsnd.stop();\n                    }\n                    this.wfsnd = this.scene.sound.add(\"Help Salty\");\n                    this.wfsnd.play();\n                };\n                this.instructionPage = new screen.InstructionPage(this.scene, (target) => {\n                    playBtnClickAnim(target);\n                    this.remove(this.instructionPage);\n                    this.showGameplay();\n                    if (this.wfsnd) {\n                        this.wfsnd.stop();\n                    }\n                }, (target) => {\n                    playBtnClickAnim(target);\n                    playInstructionSound();\n                });\n                this.add(this.instructionPage);\n                playInstructionSound();\n            }\n            showAreYouSurePage() {\n                pauseAllDelayedCalls();\n                setPageBackground(\"bg-blue\");\n                this.scene.tweens.pauseAll();\n                this.pauseSounds();\n                this.areYouSureWindow = new screen.AreYouSureWindow(this.scene, () => {\n                    this.scene.tweens.resumeAll();\n                    this.remove(this.areYouSureWindow);\n                    this.destroyGameplay();\n                    this.showInstructionPage();\n                }, () => {\n                    this.scene.tweens.resumeAll();\n                    this.remove(this.areYouSureWindow);\n                    this.unpauseSounds();\n                    resumeAllDelayedCalls();\n                    setPageBackground(\"bg-australia\");\n                });\n                this.add(this.areYouSureWindow);\n            }\n            setInputEnabled(enabled) {\n                if (enabled) {\n                    for (let a of this.words)\n                        a.setInteractive({ cursor: 'pointer' });\n                }\n                else {\n                    for (let a of this.words)\n                        a.disableInteractive();\n                }\n            }\n            pauseSounds() {\n                this.scene.sound.pauseAll();\n            }\n            unpauseSounds() {\n                this.scene.sound.resumeAll();\n            }\n            destroyGameplay() {\n                this.setInputEnabled(false);\n                this.remove(this.gameplayContainer);\n                this.scene.sound.stopAll();\n                destroyAllDelayedCalls();\n            }\n        }\n        screen.GameplayScreen = GameplayScreen;\n    })(screen = ctb.screen || (ctb.screen = {}));\n})(ctb || (ctb = {}));\nvar ctb;\n(function (ctb) {\n    var screen;\n    (function (screen) {\n        class InstructionPage extends Phaser.GameObjects.Container {\n            constructor(scene, onPlayClick, onSndClick) {\n                super(scene);\n                this._instructionPage = new Phaser.GameObjects.Image(this.scene, 0 - 105, 0 - 48, 'Instructions page  ALL ACTIVITY  TITLEs');\n                this._instructionPage.setOrigin(0, 0);\n                this._instructionPage.setInteractive();\n                this._instructionPageTitle = new Phaser.GameObjects.Image(this.scene, 495, 105, 'pop-the-bubbles-title');\n                this._instructionPageTitle.setScale(0.65);\n                this._btnPlay = new Phaser.GameObjects.Image(this.scene, game.scale.width / 2, 480 - 50, 'btnPLAY1');\n                this._btnPlay.setInteractive({ cursor: 'pointer' });\n                this._btnPlay.once('pointerup', onPlayClick);\n                setupButtonTextureBased(this._btnPlay, 'btnPLAY1', 'btnPLAY2');\n                this.instrTxt = this.scene.add.text(game.scale.width / 2, game.scale.height / 2, \"Help Salty Turtle pop all the word\\nbubbles. Listen to the word and tap on\\nthe bubble.\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 30,\n                    \"color\": \"#43425D\",\n                    \"align\": 'center'\n                });\n                this.instrTxt.setOrigin(0.5, 0.5);\n                this.instrTxt.setWordWrapWidth(650);\n                this.instrTxt.setLineSpacing(10);\n                this._btnSoundInstruction = new Phaser.GameObjects.Image(this.scene, 800 - 105, 156 - 50, 'Sound');\n                this._btnSoundInstruction.setInteractive({ cursor: 'pointer' });\n                this._btnSoundInstruction.on('pointerup', onSndClick);\n                this._btnSoundInstruction[\"defScale\"] = this._btnSoundInstruction.scale;\n                setupButtonTextureBased(this._btnSoundInstruction, 'Sound', 'Sound HOVER EFFECT');\n                this.add(this._instructionPage);\n                this.add(this._instructionPageTitle);\n                this.add(this.instrTxt);\n                this.add(this._btnPlay);\n                this.add(this._btnSoundInstruction);\n            }\n        }\n        screen.InstructionPage = InstructionPage;\n    })(screen = ctb.screen || (ctb.screen = {}));\n})(ctb || (ctb = {}));\nvar ctb;\n(function (ctb) {\n    var screen;\n    (function (screen) {\n        class TryAgainWindow extends Phaser.GameObjects.Container {\n            constructor(scene, onBack, onReplay) {\n                super(scene);\n                this.music = null;\n                this.setPosition(-106, -48);\n                this._bg = new Phaser.GameObjects.Image(this.scene, 0, 0, 'Try again page');\n                this._bg.setOrigin(0, 0);\n                this._bg.setInteractive();\n                this._star = new Phaser.GameObjects.Image(this.scene, 400, 415, 'Break Star');\n                this._btnBack = new Phaser.GameObjects.Image(this.scene, 600, 580, 'btnBACK1');\n                this._btnReplay = new Phaser.GameObjects.Image(this.scene, 765, 580, 'btnReplay1');\n                this.totalScoreTxt = this.scene.add.text(830, 355, \"\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 35,\n                    \"color\": \"#F49F1C\",\n                    \"align\": 'center',\n                    'stroke': '#70451A',\n                    'strokeThickness': 6\n                });\n                this.totalScoreTxt.setOrigin(0.5, 0.5);\n                let grd = this.totalScoreTxt.context.createLinearGradient(0, 0, 0, this.totalScoreTxt.height);\n                grd.addColorStop(0, '#FFFF00');\n                grd.addColorStop(1, '#C17316');\n                this.totalScoreTxt.setFill(grd);\n                this.starScoreTxt = this.scene.add.text(635, 431, \"\", {\n                    \"fontFamily\": \"Kids Rock Demo\",\n                    \"fontSize\": 24,\n                    \"color\": \"#FFFFFF\",\n                    \"align\": 'center'\n                });\n                this.starScoreTxt.setOrigin(0.5, 0.5);\n                this.add([\n                    this._bg,\n                    this._star,\n                    this._btnBack,\n                    this._btnReplay,\n                    this.totalScoreTxt,\n                    this.starScoreTxt\n                ]);\n                this._btnBack.setInteractive({ cursor: 'pointer' });\n                this._btnBack.on('pointerup', () => {\n                    onBack(this._btnBack);\n                    // if (this.music) {\n                    //     this.music.stop();\n                    // }\n                });\n                setupButtonTextureBased(this._btnBack, 'btnBACK1', 'btnBACK2');\n                this._btnReplay.setInteractive({ cursor: 'pointer' });\n                this._btnReplay.once('pointerup', () => {\n                    onReplay(this._btnReplay);\n                    if (this.music) {\n                        this.music.stop();\n                    }\n                });\n                setupButtonTextureBased(this._btnReplay, 'btnReplay1', 'btnReplay2');\n            }\n            show(score, starScore) {\n                this._star.scale = 1.25;\n                this.scene.tweens.add({\n                    targets: this._star,\n                    \"scale\": 1,\n                    duration: 500,\n                    ease: Phaser.Math.Easing.Back.Out\n                });\n                this.totalScoreTxt.text = String(score);\n                this.starScoreTxt.text = String(starScore);\n                this.music = this.scene.sound.add(\"Fail - close one\");\n                this.music.play();\n            }\n        }\n        screen.TryAgainWindow = TryAgainWindow;\n    })(screen = ctb.screen || (ctb.screen = {}));\n})(ctb || (ctb = {}));\n"]}